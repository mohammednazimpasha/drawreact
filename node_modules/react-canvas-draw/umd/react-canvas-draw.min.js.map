{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 1c6e5feaf030fad7fdfa","webpack:///./node_modules/lazy-brush/lib/LazyPoint.js","webpack:///./node_modules/lazy-brush/lib/Point.js","webpack:///./node_modules/catenary-curve/lib/Point.js","webpack:///./src/index.js","webpack:///external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack:///./node_modules/lazy-brush/lib/index.js","webpack:///./node_modules/lazy-brush/lib/LazyBrush.js","webpack:///./node_modules/catenary-curve/lib/index.js","webpack:///./node_modules/catenary-curve/lib/Catenary.js","webpack:///./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/drawImage.js"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE_5__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","value","obj","_createClass","defineProperties","target","props","length","descriptor","writable","key","Constructor","protoProps","staticProps","_Point2","_Point3","default","LazyPoint","_Point","instance","TypeError","_classCallCheck","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","apply","arguments","subClass","superClass","create","constructor","setPrototypeOf","_inherits","point","x","y","angle","distance","angleRotated","Math","PI","sin","cos","diff","getDifferenceTo","sqrt","pow","atan2","Point","midPointBtw","p1","p2","canvasStyle","display","position","canvasTypes","zIndex","_default","_this","_PureComponent","drawImage","imgSrc","image","Image","src","onload","__WEBPACK_IMPORTED_MODULE_4__drawImage__","ctx","grid","img","undo","lines","slice","clear","simulateDrawingLines","immediate","getSaveData","JSON","stringify","width","canvasWidth","height","canvasHeight","loadSaveData","saveData","undefined","immediateLoading","Error","_JSON$parse","parse","push","scaleX","scaleY","scaleAvg","map","line","_extends","points","brushRadius","_ref","curTime","timeoutGap","loadTimeOffset","forEach","brushColor","_loop","window","setTimeout","drawPoints","saveLine","handleTouchStart","e","_this$getPointerPos","getPointerPos","lazy","update","both","handleMouseDown","mouseHasMoved","handleTouchMove","preventDefault","_this$getPointerPos2","handlePointerMove","handleTouchEnd","handleMouseUp","brush","getBrushCoordinates","isPressing","handleMouseMove","_this$getPointerPos3","isDrawing","handleCanvasResize","entries","observer","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","_ref2","next","done","_entry$contentRect","contentRect","setCanvasSize","canvas","interface","drawing","temp","drawGrid","loop","once","style","rect","getBoundingClientRect","clientX","clientY","changedTouches","left","top","disabled","hasChanged","isDisabled","isEnabled","toObject","brushHasMoved","_ref3","lineJoin","lineCap","strokeStyle","clearRect","lineWidth","moveTo","beginPath","len","midPoint","quadraticCurveTo","lineTo","stroke","_ref4","valuesChanged","_ref5$once","pointer","getPointerCoordinates","drawInterface","requestAnimationFrame","hideGrid","setLineDash","gridColor","countX","countY","fillStyle","arc","fill","catenaryColor","catenary","drawToCanvas","chainLength","__WEBPACK_IMPORTED_MODULE_2_catenary_curve__","componentDidMount","_this2","__WEBPACK_IMPORTED_MODULE_1_lazy_brush__","radius","lazyRadius","devicePixelRatio","enabled","initialPoint","innerWidth","innerHeight","__WEBPACK_IMPORTED_MODULE_3_resize_observer_polyfill__","observe","canvasContainer","initX","initY","componentDidUpdate","prevProps","setRadius","render","_this3","__WEBPACK_IMPORTED_MODULE_0_react___default","a","createElement","background","touchAction","ref","container","_ref6","isInterface","getContext","onMouseDown","onMouseMove","onMouseUp","onMouseOut","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","__WEBPACK_IMPORTED_MODULE_0_react__","defaultProps","LazyBrush","_LazyBrush2","_interopRequireDefault","_LazyPoint2","_LazyPoint","RADIUS_DEFAULT","_ref$radius","_ref$enabled","_ref$initialPoint","_isEnabled","_hasMoved","newPointerPoint","_ref2$both","equalsTo","getDistanceTo","getAngleTo","moveByAngle","Catenary","_Catenary2","_ref$segments","segments","_ref$iterationLimit","iterationLimit","context","point1","point2","isFlipped","curveData","isStraight","h","v","getCatenaryParameter","log","cosh","offsetX","offsetY","getCurve","mx","my","drawLine","drawCurve","limit","acosh","prevx","count","abs","sinh","data","ox","oy","global","MapShim","Map","getIndex","arr","result","some","entry","index","anonymous","__entries__","prototypeAccessors","size","set","delete","splice","has","callback","list","isBrowser","document","global$1","Function","requestAnimationFrame$1","bind","Date","now","trailingTimeout","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","indexOf","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","addEventListener","attributes","childList","characterData","subtree","removeEventListener","disconnect","propertyName","getInstance","instance_","defineConfigurable","keys","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","reduce","getHTMLElementContentRect","clientWidth","clientHeight","getComputedStyle","paddings","getPaddings","horizPad","right","vertPad","bottom","boxSizing","round","documentElement","isDocumentElement","vertScrollbar","horizScrollbar","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","broadcastRect","ResizeObserverEntry","rectInit","Constr","DOMRectReadOnly","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","this$1","observation","WeakMap","ResizeObserver","method","__webpack_exports__","g","eval","w","cx","cy","cw","ch","iw","ih","r","min","nw","nh","ar"],"mappings":"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","file":"react-canvas-draw.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactCanvasDraw\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ReactCanvasDraw\"] = factory(root[\"React\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_5__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1c6e5feaf030fad7fdfa","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Point2 = require('./Point');\n\nvar _Point3 = _interopRequireDefault(_Point2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar LazyPoint = function (_Point) {\n  _inherits(LazyPoint, _Point);\n\n  function LazyPoint() {\n    _classCallCheck(this, LazyPoint);\n\n    return _possibleConstructorReturn(this, (LazyPoint.__proto__ || Object.getPrototypeOf(LazyPoint)).apply(this, arguments));\n  }\n\n  _createClass(LazyPoint, [{\n    key: 'update',\n\n    /**\n     * Update the x and y values\n     *\n     * @param {Point} point\n     */\n    value: function update(point) {\n      this.x = point.x;\n      this.y = point.y;\n    }\n\n    /**\n     * Move the point to another position using an angle and distance\n     *\n     * @param {number} angle The angle in radians\n     * @param {number} distance How much the point should be moved\n     */\n\n  }, {\n    key: 'moveByAngle',\n    value: function moveByAngle(angle, distance) {\n      // Rotate the angle based on the browser coordinate system ([0,0] in the top left)\n      var angleRotated = angle + Math.PI / 2;\n\n      this.x = this.x + Math.sin(angleRotated) * distance, this.y = this.y - Math.cos(angleRotated) * distance;\n    }\n\n    /**\n     * Check if this point is the same as another point\n     *\n     * @param {Point} point\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'equalsTo',\n    value: function equalsTo(point) {\n      return this.x === point.x && this.y === point.y;\n    }\n\n    /**\n     * Get the difference for x and y axis to another point\n     *\n     * @param {Point} point\n     * @returns {Point}\n     */\n\n  }, {\n    key: 'getDifferenceTo',\n    value: function getDifferenceTo(point) {\n      return new _Point3.default(this.x - point.x, this.y - point.y);\n    }\n\n    /**\n     * Calculate distance to another point\n     *\n     * @param {Point} point\n     * @returns {Point}\n     */\n\n  }, {\n    key: 'getDistanceTo',\n    value: function getDistanceTo(point) {\n      var diff = this.getDifferenceTo(point);\n\n      return Math.sqrt(Math.pow(diff.x, 2) + Math.pow(diff.y, 2));\n    }\n\n    /**\n     * Calculate the angle to another point\n     *\n     * @param {Point} point\n     * @returns {Point}\n     */\n\n  }, {\n    key: 'getAngleTo',\n    value: function getAngleTo(point) {\n      var diff = this.getDifferenceTo(point);\n\n      return Math.atan2(diff.y, diff.x);\n    }\n\n    /**\n     * Return a simple object with x and y properties\n     *\n     * @returns {object}\n     */\n\n  }, {\n    key: 'toObject',\n    value: function toObject() {\n      return {\n        x: this.x,\n        y: this.y\n      };\n    }\n  }]);\n\n  return LazyPoint;\n}(_Point3.default);\n\nexports.default = LazyPoint;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lazy-brush/lib/LazyPoint.js\n// module id = 0\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Point =\n/**\n *\n * @param {number} x\n * @param {number} y\n */\nfunction Point(x, y) {\n  _classCallCheck(this, Point);\n\n  this.x = x;\n  this.y = y;\n};\n\nexports.default = Point;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lazy-brush/lib/Point.js\n// module id = 1\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Point = function () {\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   */\n  function Point(x, y) {\n    _classCallCheck(this, Point);\n\n    this.x = x;\n    this.y = y;\n  }\n\n  /**\n   * Update the x and y values\n   *\n   * @param {Point} point\n   */\n\n\n  _createClass(Point, [{\n    key: \"update\",\n    value: function update(point) {\n      this.x = point.x;\n      this.y = point.y;\n    }\n\n    /**\n     * Get the difference for x and y axis to another point\n     *\n     * @param {Point} point\n     * @returns {Point}\n     */\n\n  }, {\n    key: \"getDifferenceTo\",\n    value: function getDifferenceTo(point) {\n      return new Point(this.x - point.x, this.y - point.y);\n    }\n\n    /**\n     * Calculate distance to another point\n     *\n     * @param {Point} point\n     * @returns {Point}\n     */\n\n  }, {\n    key: \"getDistanceTo\",\n    value: function getDistanceTo(point) {\n      var diff = this.getDifferenceTo(point);\n\n      return Math.sqrt(Math.pow(diff.x, 2) + Math.pow(diff.y, 2));\n    }\n  }]);\n\n  return Point;\n}();\n\nexports.default = Point;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/catenary-curve/lib/Point.js\n// module id = 2\n// module chunks = 0","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { LazyBrush } from \"lazy-brush\";\r\nimport { Catenary } from \"catenary-curve\";\r\n\r\nimport ResizeObserver from \"resize-observer-polyfill\";\r\n\r\nimport drawImage from \"./drawImage\";\r\n\r\nfunction midPointBtw(p1, p2) {\r\n  return {\r\n    x: p1.x + (p2.x - p1.x) / 2,\r\n    y: p1.y + (p2.y - p1.y) / 2\r\n  };\r\n}\r\n\r\nconst canvasStyle = {\r\n  display: \"block\",\r\n  position: \"absolute\"\r\n};\r\n\r\nconst canvasTypes = [\r\n  {\r\n    name: \"interface\",\r\n    zIndex: 15\r\n  },\r\n  {\r\n    name: \"drawing\",\r\n    zIndex: 11\r\n  },\r\n  {\r\n    name: \"temp\",\r\n    zIndex: 12\r\n  },\r\n  {\r\n    name: \"grid\",\r\n    zIndex: 10\r\n  }\r\n];\r\n\r\nexport default class extends PureComponent {\r\n  static propTypes = {\r\n    loadTimeOffset: PropTypes.number,\r\n    lazyRadius: PropTypes.number,\r\n    brushRadius: PropTypes.number,\r\n    brushColor: PropTypes.string,\r\n    catenaryColor: PropTypes.string,\r\n    gridColor: PropTypes.string,\r\n    hideGrid: PropTypes.bool,\r\n    canvasWidth: PropTypes.number,\r\n    canvasHeight: PropTypes.number,\r\n    disabled: PropTypes.bool,\r\n    imgSrc: PropTypes.string,\r\n    saveData: PropTypes.string,\r\n    immediateLoading: PropTypes.bool\r\n  };\r\n\r\n  static defaultProps = {\r\n    loadTimeOffset: 5,\r\n    lazyRadius: 12,\r\n    brushRadius: 10,\r\n    brushColor: \"#444\",\r\n    catenaryColor: \"#0a0302\",\r\n    gridColor: \"rgba(150,150,150,0.17)\",\r\n    hideGrid: false,\r\n    canvasWidth: 400,\r\n    canvasHeight: 400,\r\n    disabled: false,\r\n    imgSrc: \"\",\r\n    saveData: \"\",\r\n    immediateLoading: false\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.canvas = {};\r\n    this.ctx = {};\r\n\r\n    this.catenary = new Catenary();\r\n\r\n    this.points = [];\r\n    this.lines = [];\r\n\r\n    this.mouseHasMoved = true;\r\n    this.valuesChanged = true;\r\n    this.isDrawing = false;\r\n    this.isPressing = false;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.lazy = new LazyBrush({\r\n      radius: this.props.lazyRadius * window.devicePixelRatio,\r\n      enabled: true,\r\n      initialPoint: {\r\n        x: window.innerWidth / 2,\r\n        y: window.innerHeight / 2\r\n      }\r\n    });\r\n    this.chainLength = this.props.lazyRadius * window.devicePixelRatio;\r\n\r\n    const observeCanvas = new ResizeObserver((entries, observer) =>\r\n      this.handleCanvasResize(entries, observer)\r\n    );\r\n    observeCanvas.observe(this.canvasContainer);\r\n\r\n    this.drawImage();\r\n    this.loop();\r\n\r\n    window.setTimeout(() => {\r\n      const initX = window.innerWidth / 2;\r\n      const initY = window.innerHeight / 2;\r\n      this.lazy.update(\r\n        { x: initX - this.chainLength / 4, y: initY },\r\n        { both: true }\r\n      );\r\n      this.lazy.update(\r\n        { x: initX + this.chainLength / 4, y: initY },\r\n        { both: false }\r\n      );\r\n      this.mouseHasMoved = true;\r\n      this.valuesChanged = true;\r\n      this.clear();\r\n\r\n      // Load saveData from prop if it exists\r\n      if (this.props.saveData) {\r\n        this.loadSaveData(this.props.saveData);\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.lazyRadius !== this.props.lazyRadius) {\r\n      // Set new lazyRadius values\r\n      this.chainLength = this.props.lazyRadius * window.devicePixelRatio;\r\n      this.lazy.setRadius(this.props.lazyRadius * window.devicePixelRatio);\r\n    }\r\n\r\n    if (prevProps.saveData !== this.props.saveData) {\r\n      this.loadSaveData(this.props.saveData);\r\n    }\r\n\r\n    if (JSON.stringify(prevProps) !== JSON.stringify(this.props)) {\r\n      // Signal this.loop function that values changed\r\n      this.valuesChanged = true;\r\n    }\r\n  }\r\n\r\n  drawImage = () => {\r\n    if (!this.props.imgSrc) return;\r\n\r\n    // Load the image\r\n    this.image = new Image();\r\n    this.image.src = this.props.imgSrc;\r\n\r\n    // Draw the image once loaded\r\n    this.image.onload = () =>\r\n      drawImage({ ctx: this.ctx.grid, img: this.image });\r\n  };\r\n\r\n  undo = () => {\r\n    const lines = this.lines.slice(0, -1);\r\n    this.clear();\r\n    this.simulateDrawingLines({ lines, immediate: true });\r\n  };\r\n\r\n  getSaveData = () => {\r\n    // Construct and return the stringified saveData object\r\n    return JSON.stringify({\r\n      lines: this.lines,\r\n      width: this.props.canvasWidth,\r\n      height: this.props.canvasHeight\r\n    });\r\n  };\r\n\r\n  loadSaveData = (saveData, immediate = this.props.immediateLoading) => {\r\n    if (typeof saveData !== \"string\") {\r\n      throw new Error(\"saveData needs to be of type string!\");\r\n    }\r\n\r\n    const { lines, width, height } = JSON.parse(saveData);\r\n\r\n    if (!lines || typeof lines.push !== \"function\") {\r\n      throw new Error(\"saveData.lines needs to be an array!\");\r\n    }\r\n\r\n    this.clear();\r\n\r\n    if (\r\n      width === this.props.canvasWidth &&\r\n      height === this.props.canvasHeight\r\n    ) {\r\n      this.simulateDrawingLines({\r\n        lines,\r\n        immediate\r\n      });\r\n    } else {\r\n      // we need to rescale the lines based on saved & current dimensions\r\n      const scaleX = this.props.canvasWidth / width;\r\n      const scaleY = this.props.canvasHeight / height;\r\n      const scaleAvg = (scaleX + scaleY) / 2;\r\n\r\n      this.simulateDrawingLines({\r\n        lines: lines.map(line => ({\r\n          ...line,\r\n          points: line.points.map(p => ({\r\n            x: p.x * scaleX,\r\n            y: p.y * scaleY\r\n          })),\r\n          brushRadius: line.brushRadius * scaleAvg\r\n        })),\r\n        immediate\r\n      });\r\n    }\r\n  };\r\n\r\n  simulateDrawingLines = ({ lines, immediate }) => {\r\n    // Simulate live-drawing of the loaded lines\r\n    // TODO use a generator\r\n    let curTime = 0;\r\n    let timeoutGap = immediate ? 0 : this.props.loadTimeOffset;\r\n\r\n    lines.forEach(line => {\r\n      const { points, brushColor, brushRadius } = line;\r\n\r\n      for (let i = 1; i < points.length; i++) {\r\n        curTime += timeoutGap;\r\n        window.setTimeout(() => {\r\n          this.drawPoints({\r\n            points: points.slice(0, i + 1),\r\n            brushColor,\r\n            brushRadius\r\n          });\r\n        }, curTime);\r\n      }\r\n\r\n      curTime += timeoutGap;\r\n      window.setTimeout(() => {\r\n        // Save this line with its props instead of this.props\r\n        this.points = points;\r\n        this.saveLine({ brushColor, brushRadius });\r\n      }, curTime);\r\n    });\r\n  };\r\n\r\n  handleTouchStart = e => {\r\n    const { x, y } = this.getPointerPos(e);\r\n    this.lazy.update({ x, y }, { both: true });\r\n    this.handleMouseDown(e);\r\n\r\n    this.mouseHasMoved = true;\r\n  };\r\n\r\n  handleTouchMove = e => {\r\n    e.preventDefault();\r\n    const { x, y } = this.getPointerPos(e);\r\n    this.handlePointerMove(x, y);\r\n  };\r\n\r\n  handleTouchEnd = e => {\r\n    this.handleMouseUp(e);\r\n    const brush = this.lazy.getBrushCoordinates();\r\n    this.lazy.update({ x: brush.x, y: brush.y }, { both: true });\r\n    this.mouseHasMoved = true;\r\n  };\r\n\r\n  handleMouseDown = e => {\r\n    e.preventDefault();\r\n    this.isPressing = true;\r\n  };\r\n\r\n  handleMouseMove = e => {\r\n    const { x, y } = this.getPointerPos(e);\r\n    this.handlePointerMove(x, y);\r\n  };\r\n\r\n  handleMouseUp = e => {\r\n    e.preventDefault();\r\n    this.isDrawing = false;\r\n    this.isPressing = false;\r\n\r\n    this.saveLine();\r\n  };\r\n\r\n  handleCanvasResize = (entries, observer) => {\r\n    const saveData = this.getSaveData();\r\n    for (const entry of entries) {\r\n      const { width, height } = entry.contentRect;\r\n      this.setCanvasSize(this.canvas.interface, width, height);\r\n      this.setCanvasSize(this.canvas.drawing, width, height);\r\n      this.setCanvasSize(this.canvas.temp, width, height);\r\n      this.setCanvasSize(this.canvas.grid, width, height);\r\n\r\n      this.drawGrid(this.ctx.grid);\r\n      this.loop({ once: true });\r\n    }\r\n    this.loadSaveData(saveData, true);\r\n  };\r\n\r\n  setCanvasSize = (canvas, width, height) => {\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    canvas.style.width = width;\r\n    canvas.style.height = height;\r\n  };\r\n\r\n  getPointerPos = e => {\r\n    const rect = this.canvas.interface.getBoundingClientRect();\r\n\r\n    // use cursor pos as default\r\n    let clientX = e.clientX;\r\n    let clientY = e.clientY;\r\n\r\n    // use first touch if available\r\n    if (e.changedTouches && e.changedTouches.length > 0) {\r\n      clientX = e.changedTouches[0].clientX;\r\n      clientY = e.changedTouches[0].clientY;\r\n    }\r\n\r\n    // return mouse/touch position inside canvas\r\n    return {\r\n      x: clientX - rect.left,\r\n      y: clientY - rect.top\r\n    };\r\n  };\r\n\r\n  handlePointerMove = (x, y) => {\r\n    if (this.props.disabled) return;\r\n\r\n    const hasChanged = this.lazy.update({ x, y });\r\n    const isDisabled = !this.lazy.isEnabled();\r\n\r\n    if (\r\n      (this.isPressing && hasChanged && !this.isDrawing) ||\r\n      (isDisabled && this.isPressing)\r\n    ) {\r\n      // Start drawing and add point\r\n      this.isDrawing = true;\r\n      this.points.push(this.lazy.brush.toObject());\r\n    }\r\n\r\n    if (this.isDrawing && (this.lazy.brushHasMoved() || isDisabled)) {\r\n      // Add new point\r\n      this.points.push(this.lazy.brush.toObject());\r\n\r\n      // Draw current points\r\n      this.drawPoints({\r\n        points: this.points,\r\n        brushColor: this.props.brushColor,\r\n        brushRadius: this.props.brushRadius\r\n      });\r\n    }\r\n\r\n    this.mouseHasMoved = true;\r\n  };\r\n\r\n  drawPoints = ({ points, brushColor, brushRadius }) => {\r\n    this.ctx.temp.lineJoin = \"round\";\r\n    this.ctx.temp.lineCap = \"round\";\r\n    this.ctx.temp.strokeStyle = brushColor;\r\n\r\n    this.ctx.temp.clearRect(\r\n      0,\r\n      0,\r\n      this.ctx.temp.canvas.width,\r\n      this.ctx.temp.canvas.height\r\n    );\r\n    this.ctx.temp.lineWidth = brushRadius * 2;\r\n\r\n    let p1 = points[0];\r\n    let p2 = points[1];\r\n\r\n    this.ctx.temp.moveTo(p2.x, p2.y);\r\n    this.ctx.temp.beginPath();\r\n\r\n    for (var i = 1, len = points.length; i < len; i++) {\r\n      // we pick the point between pi+1 & pi+2 as the\r\n      // end point and p1 as our control point\r\n      var midPoint = midPointBtw(p1, p2);\r\n      this.ctx.temp.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\r\n      p1 = points[i];\r\n      p2 = points[i + 1];\r\n    }\r\n    // Draw last line as a straight line while\r\n    // we wait for the next point to be able to calculate\r\n    // the bezier control point\r\n    this.ctx.temp.lineTo(p1.x, p1.y);\r\n    this.ctx.temp.stroke();\r\n  };\r\n\r\n  saveLine = ({ brushColor, brushRadius } = {}) => {\r\n    if (this.points.length < 2) return;\r\n\r\n    // Save as new line\r\n    this.lines.push({\r\n      points: [...this.points],\r\n      brushColor: brushColor || this.props.brushColor,\r\n      brushRadius: brushRadius || this.props.brushRadius\r\n    });\r\n\r\n    // Reset points array\r\n    this.points.length = 0;\r\n\r\n    const width = this.canvas.temp.width;\r\n    const height = this.canvas.temp.height;\r\n\r\n    // Copy the line to the drawing canvas\r\n    this.ctx.drawing.drawImage(this.canvas.temp, 0, 0, width, height);\r\n\r\n    // Clear the temporary line-drawing canvas\r\n    this.ctx.temp.clearRect(0, 0, width, height);\r\n  };\r\n\r\n  clear = () => {\r\n    this.lines = [];\r\n    this.valuesChanged = true;\r\n    this.ctx.drawing.clearRect(\r\n      0,\r\n      0,\r\n      this.canvas.drawing.width,\r\n      this.canvas.drawing.height\r\n    );\r\n    this.ctx.temp.clearRect(\r\n      0,\r\n      0,\r\n      this.canvas.temp.width,\r\n      this.canvas.temp.height\r\n    );\r\n  };\r\n\r\n  loop = ({ once = false } = {}) => {\r\n    if (this.mouseHasMoved || this.valuesChanged) {\r\n      const pointer = this.lazy.getPointerCoordinates();\r\n      const brush = this.lazy.getBrushCoordinates();\r\n\r\n      this.drawInterface(this.ctx.interface, pointer, brush);\r\n      this.mouseHasMoved = false;\r\n      this.valuesChanged = false;\r\n    }\r\n\r\n    if (!once) {\r\n      window.requestAnimationFrame(() => {\r\n        this.loop();\r\n      });\r\n    }\r\n  };\r\n\r\n  drawGrid = ctx => {\r\n    if (this.props.hideGrid) return;\r\n\r\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n\r\n    ctx.beginPath();\r\n    ctx.setLineDash([5, 1]);\r\n    ctx.setLineDash([]);\r\n    ctx.strokeStyle = this.props.gridColor;\r\n    ctx.lineWidth = 0.5;\r\n\r\n    const gridSize = 25;\r\n\r\n    let countX = 0;\r\n    while (countX < ctx.canvas.width) {\r\n      countX += gridSize;\r\n      ctx.moveTo(countX, 0);\r\n      ctx.lineTo(countX, ctx.canvas.height);\r\n    }\r\n    ctx.stroke();\r\n\r\n    let countY = 0;\r\n    while (countY < ctx.canvas.height) {\r\n      countY += gridSize;\r\n      ctx.moveTo(0, countY);\r\n      ctx.lineTo(ctx.canvas.width, countY);\r\n    }\r\n    ctx.stroke();\r\n  };\r\n\r\n  drawInterface = (ctx, pointer, brush) => {\r\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n\r\n    // Draw brush preview\r\n    ctx.beginPath();\r\n    ctx.fillStyle = this.props.brushColor;\r\n    ctx.arc(brush.x, brush.y, this.props.brushRadius, 0, Math.PI * 2, true);\r\n    ctx.fill();\r\n\r\n    // Draw mouse point (the one directly at the cursor)\r\n    ctx.beginPath();\r\n    ctx.fillStyle = this.props.catenaryColor;\r\n    ctx.arc(pointer.x, pointer.y, 4, 0, Math.PI * 2, true);\r\n    ctx.fill();\r\n\r\n    // Draw catenary\r\n    if (this.lazy.isEnabled()) {\r\n      ctx.beginPath();\r\n      ctx.lineWidth = 2;\r\n      ctx.lineCap = \"round\";\r\n      ctx.setLineDash([2, 4]);\r\n      ctx.strokeStyle = this.props.catenaryColor;\r\n      this.catenary.drawToCanvas(\r\n        this.ctx.interface,\r\n        brush,\r\n        pointer,\r\n        this.chainLength\r\n      );\r\n      ctx.stroke();\r\n    }\r\n\r\n    // Draw brush point (the one in the middle of the brush preview)\r\n    ctx.beginPath();\r\n    ctx.fillStyle = this.props.catenaryColor;\r\n    ctx.arc(brush.x, brush.y, 2, 0, Math.PI * 2, true);\r\n    ctx.fill();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"block\",\r\n          background: \"#fff\",\r\n          touchAction: \"none\",\r\n          width: this.props.canvasWidth,\r\n          height: this.props.canvasHeight,\r\n          ...this.props.style\r\n        }}\r\n        ref={container => {\r\n          if (container) {\r\n            this.canvasContainer = container;\r\n          }\r\n        }}\r\n      >\r\n        {canvasTypes.map(({ name, zIndex }) => {\r\n          const isInterface = name === \"interface\";\r\n          return (\r\n            <canvas\r\n              key={name}\r\n              ref={canvas => {\r\n                if (canvas) {\r\n                  this.canvas[name] = canvas;\r\n                  this.ctx[name] = canvas.getContext(\"2d\");\r\n                }\r\n              }}\r\n              style={{ ...canvasStyle, zIndex }}\r\n              onMouseDown={isInterface ? this.handleMouseDown : undefined}\r\n              onMouseMove={isInterface ? this.handleMouseMove : undefined}\r\n              onMouseUp={isInterface ? this.handleMouseUp : undefined}\r\n              onMouseOut={isInterface ? this.handleMouseUp : undefined}\r\n              onTouchStart={isInterface ? this.handleTouchStart : undefined}\r\n              onTouchMove={isInterface ? this.handleTouchMove : undefined}\r\n              onTouchEnd={isInterface ? this.handleTouchEnd : undefined}\r\n              onTouchCancel={isInterface ? this.handleTouchEnd : undefined}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}\n// module id = 5\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LazyPoint = exports.Point = exports.LazyBrush = undefined;\n\nvar _LazyBrush = require('./LazyBrush');\n\nvar _LazyBrush2 = _interopRequireDefault(_LazyBrush);\n\nvar _Point = require('./Point');\n\nvar _Point2 = _interopRequireDefault(_Point);\n\nvar _LazyPoint = require('./LazyPoint');\n\nvar _LazyPoint2 = _interopRequireDefault(_LazyPoint);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.LazyBrush = _LazyBrush2.default;\nexports.Point = _Point2.default;\nexports.LazyPoint = _LazyPoint2.default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lazy-brush/lib/index.js\n// module id = 6\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _LazyPoint = require('./LazyPoint');\n\nvar _LazyPoint2 = _interopRequireDefault(_LazyPoint);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar RADIUS_DEFAULT = 30;\n\nvar LazyBrush = function () {\n  /**\n   * constructor\n   *\n   * @param {object} settings\n   * @param {number} settings.radius The radius for the lazy area\n   * @param {boolean} settings.enabled\n   */\n  function LazyBrush() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$radius = _ref.radius,\n        radius = _ref$radius === undefined ? RADIUS_DEFAULT : _ref$radius,\n        _ref$enabled = _ref.enabled,\n        enabled = _ref$enabled === undefined ? true : _ref$enabled,\n        _ref$initialPoint = _ref.initialPoint,\n        initialPoint = _ref$initialPoint === undefined ? { x: 0, y: 0 } : _ref$initialPoint;\n\n    _classCallCheck(this, LazyBrush);\n\n    this.radius = radius;\n    this._isEnabled = enabled;\n\n    this.pointer = new _LazyPoint2.default(initialPoint.x, initialPoint.y);\n    this.brush = new _LazyPoint2.default(initialPoint.x, initialPoint.y);\n\n    this.angle = 0;\n    this.distance = 0;\n    this._hasMoved = false;\n  }\n\n  /**\n   * Enable lazy brush calculations.\n   *\n   */\n\n\n  _createClass(LazyBrush, [{\n    key: 'enable',\n    value: function enable() {\n      this._isEnabled = true;\n    }\n\n    /**\n     * Disable lazy brush calculations.\n     *\n     */\n\n  }, {\n    key: 'disable',\n    value: function disable() {\n      this._isEnabled = false;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'isEnabled',\n    value: function isEnabled() {\n      return this._isEnabled;\n    }\n\n    /**\n     * Update the radius\n     *\n     * @param {number} radius\n     */\n\n  }, {\n    key: 'setRadius',\n    value: function setRadius(radius) {\n      this.radius = radius;\n    }\n\n    /**\n     * Return the current radius\n     *\n     * @returns {number}\n     */\n\n  }, {\n    key: 'getRadius',\n    value: function getRadius() {\n      return this.radius;\n    }\n\n    /**\n     * Return the brush coordinates as a simple object\n     *\n     * @returns {object}\n     */\n\n  }, {\n    key: 'getBrushCoordinates',\n    value: function getBrushCoordinates() {\n      return this.brush.toObject();\n    }\n\n    /**\n     * Return the pointer coordinates as a simple object\n     *\n     * @returns {object}\n     */\n\n  }, {\n    key: 'getPointerCoordinates',\n    value: function getPointerCoordinates() {\n      return this.pointer.toObject();\n    }\n\n    /**\n     * Return the brush as a LazyPoint\n     *\n     * @returns {LazyPoint}\n     */\n\n  }, {\n    key: 'getBrush',\n    value: function getBrush() {\n      return this.brush;\n    }\n\n    /**\n     * Return the pointer as a LazyPoint\n     *\n     * @returns {LazyPoint}\n     */\n\n  }, {\n    key: 'getPointer',\n    value: function getPointer() {\n      return this.pointer;\n    }\n\n    /**\n     * Return the angle between pointer and brush\n     *\n     * @returns {number} Angle in radians\n     */\n\n  }, {\n    key: 'getAngle',\n    value: function getAngle() {\n      return this.angle;\n    }\n\n    /**\n     * Return the distance between pointer and brush\n     *\n     * @returns {number} Distance in pixels\n     */\n\n  }, {\n    key: 'getDistance',\n    value: function getDistance() {\n      return this.distance;\n    }\n\n    /**\n     * Return if the previous update has moved the brush.\n     *\n     * @returns {boolean} Whether the brush moved previously.\n     */\n\n  }, {\n    key: 'brushHasMoved',\n    value: function brushHasMoved() {\n      return this._hasMoved;\n    }\n\n    /**\n     * Updates the pointer point and calculates the new brush point.\n     *\n     * @param {Point} newPointerPoint\n     * @param {Object} options\n     * @param {Boolean} options.both Force update pointer and brush\n     * @returns {Boolean} Whether any of the two points changed\n     */\n\n  }, {\n    key: 'update',\n    value: function update(newPointerPoint) {\n      var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          _ref2$both = _ref2.both,\n          both = _ref2$both === undefined ? false : _ref2$both;\n\n      this._hasMoved = false;\n      if (this.pointer.equalsTo(newPointerPoint) && !both) {\n        return false;\n      }\n\n      this.pointer.update(newPointerPoint);\n\n      if (both) {\n        this._hasMoved = true;\n        this.brush.update(newPointerPoint);\n        return true;\n      }\n\n      if (this._isEnabled) {\n        this.distance = this.pointer.getDistanceTo(this.brush);\n        this.angle = this.pointer.getAngleTo(this.brush);\n\n        if (this.distance > this.radius) {\n          this.brush.moveByAngle(this.angle, this.distance - this.radius);\n          this._hasMoved = true;\n        }\n      } else {\n        this.distance = 0;\n        this.angle = 0;\n        this.brush.update(newPointerPoint);\n        this._hasMoved = true;\n      }\n\n      return true;\n    }\n  }]);\n\n  return LazyBrush;\n}();\n\nexports.default = LazyBrush;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lazy-brush/lib/LazyBrush.js\n// module id = 7\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Point = exports.Catenary = undefined;\n\nvar _Catenary = require('./Catenary');\n\nvar _Catenary2 = _interopRequireDefault(_Catenary);\n\nvar _Point = require('./Point');\n\nvar _Point2 = _interopRequireDefault(_Point);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.Catenary = _Catenary2.default;\nexports.Point = _Point2.default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/catenary-curve/lib/index.js\n// module id = 8\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\niven two points and a length, calculate and draw the catenary.\nnavaScript implementation:\nopyright (c) 2018 Jan Hug <me@dulnan.net>\neleased under the MIT license.\nnnnriginal ActionScript implementation:\nopyright poiasd ( http://wonderfl.net/user/poiasd )\nicense ( http://www.opensource.org/licenses/mit-license.php )\nownloaded from: http://wonderfl.net/c/8Bnl\nnnnrchived by and downloaded from:\nhttp://wa.zozuar.org/code.php?c=8Bnl\nn\n\nvar _Point = require('./Point');\n\nvar _Point2 = _interopRequireDefault(_Point);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar EPSILON = 1e-6;\n\nvar Catenary = function () {\n  /**\n   * constructor\n   *\n   * @param {Object} settings\n   * @param {Number} settings.segments Number of segments of the chain.\n   * @param {Number} settings.iterationLimit Maximum amount iterations for getting catenary parameters.\n   */\n  function Catenary() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$segments = _ref.segments,\n        segments = _ref$segments === undefined ? 50 : _ref$segments,\n        _ref$iterationLimit = _ref.iterationLimit,\n        iterationLimit = _ref$iterationLimit === undefined ? 100 : _ref$iterationLimit;\n\n    _classCallCheck(this, Catenary);\n\n    this.p1 = new _Point2.default();\n    this.p2 = new _Point2.default();\n\n    this.segments = segments;\n    this.iterationLimit = iterationLimit;\n  }\n\n  /**\n   * Draws a catenary given two coordinates, a length and a context.\n   * \n   * @param {CanvasRenderingContext2D} context The canvas context to draw the catenary on to.\n   * @param {Point} p1 First point\n   * @param {Point} p2 Second point\n   * @param {Number} chainLength The length of the catenary\n   */\n\n\n  _createClass(Catenary, [{\n    key: 'drawToCanvas',\n    value: function drawToCanvas(context, point1, point2, chainLength) {\n      this.p1.update(point1);\n      this.p2.update(point2);\n\n      var isFlipped = this.p1.x > this.p2.x;\n\n      var p1 = isFlipped ? this.p2 : this.p1;\n      var p2 = isFlipped ? this.p1 : this.p2;\n\n      var distance = p1.getDistanceTo(p2);\n\n      var curveData = [];\n      var isStraight = true;\n\n      // Prevent \"expensive\" catenary calculations if it would only result\n      // in a straight line.\n      if (distance < chainLength) {\n        var diff = p2.x - p1.x;\n\n        // If the distance on the x axis of both points is too small, don't\n        // calculate a catenary.\n        if (diff > 0.01) {\n          var h = p2.x - p1.x;\n          var v = p2.y - p1.y;\n          var a = -this.getCatenaryParameter(h, v, chainLength, this.iterationLimit);\n          var x = (a * Math.log((chainLength + v) / (chainLength - v)) - h) * 0.5;\n          var y = a * Math.cosh(x / a);\n          var offsetX = p1.x - x;\n          var offsetY = p1.y - y;\n          curveData = this.getCurve(a, p1, p2, offsetX, offsetY, this.segments);\n          isStraight = false;\n        } else {\n          var mx = (p1.x + p2.x) * 0.5;\n          var my = (p1.y + p2.y + chainLength) * 0.5;\n\n          curveData = [[p1.x, p1.y], [mx, my], [p2.x, p2.y]];\n        }\n      } else {\n        curveData = [[p1.x, p1.y], [p2.x, p2.y]];\n      }\n\n      if (isStraight) {\n        this.drawLine(curveData, context);\n      } else {\n        this.drawCurve(curveData, context);\n      }\n\n      return curveData;\n    }\n\n    /**\n     * Determines catenary parameter.\n     * \n     * @param {Number} h Horizontal distance of both points.\n     * @param {Number} v Vertical distance of both points.\n     * @param {Number} length The catenary length.\n     * @param {Number} limit Maximum amount of iterations to find parameter.\n     */\n\n  }, {\n    key: 'getCatenaryParameter',\n    value: function getCatenaryParameter(h, v, length, limit) {\n      var m = Math.sqrt(length * length - v * v) / h;\n      var x = Math.acosh(m) + 1;\n      var prevx = -1;\n      var count = 0;\n\n      while (Math.abs(x - prevx) > EPSILON && count < limit) {\n        prevx = x;\n        x = x - (Math.sinh(x) - m * x) / (Math.cosh(x) - m);\n        count++;\n      }\n\n      return h / (2 * x);\n    }\n\n    /**\n     * Calculate the catenary curve.\n     * Increasing the segments value will produce a catenary closer\n     * to reality, but will require more calcluations.\n     * \n     * @param {Number} a The catenary parameter.\n     * @param {Point} p1 First point\n     * @param {Point} p2 Second point\n     * @param {Number} offsetX The calculated offset on the x axis.\n     * @param {Number} offsetY The calculated offset on the y axis.\n     * @param {Number} segments How many \"parts\" the chain should be made of.\n     */\n\n  }, {\n    key: 'getCurve',\n    value: function getCurve(a, p1, p2, offsetX, offsetY, segments) {\n      var data = [p1.x, a * Math.cosh((p1.x - offsetX) / a) + offsetY];\n\n      var d = p2.x - p1.x;\n      var length = segments - 1;\n\n      for (var i = 0; i < length; i++) {\n        var x = p1.x + d * (i + 0.5) / length;\n        var y = a * Math.cosh((x - offsetX) / a) + offsetY;\n        data.push(x, y);\n      }\n\n      data.push(p2.x, a * Math.cosh((p2.x - offsetX) / a) + offsetY);\n\n      return data;\n    }\n\n    /**\n     * Draws a straight line between two points.\n     *\n     * @param {Array} data Even indices are x, odd are y.\n     * @param {CanvasRenderingContext2D} context The context to draw to.\n     */\n\n  }, {\n    key: 'drawLine',\n    value: function drawLine(data, context) {\n      context.moveTo(data[0][0], data[0][1]);\n\n      context.lineTo(data[1][0], data[1][1]);\n    }\n\n    /**\n     * Draws a quadratic curve between every calculated catenary segment,\n     * so that the segments don't look like straight lines.\n     *\n     * @param {Array} data Even indices are x, odd are y.\n     * @param {CanvasRenderingContext2D} context The context to draw to.\n     * \n     * @returns {Array} The original segment coordinates.\n     */\n\n  }, {\n    key: 'drawCurve',\n    value: function drawCurve(data, context) {\n      var length = data.length * 0.5 - 1;\n      var ox = data[2];\n      var oy = data[3];\n\n      var temp = [];\n\n      context.moveTo(data[0], data[1]);\n\n      for (var i = 2; i < length; i++) {\n        var x = data[i * 2];\n        var y = data[i * 2 + 1];\n        var mx = (x + ox) * 0.5;\n        var my = (y + oy) * 0.5;\n        temp.push([ox, oy, mx, my]);\n        context.quadraticCurveTo(ox, oy, mx, my);\n        ox = x;\n        oy = y;\n      }\n\n      length = data.length;\n      context.quadraticCurveTo(data[length - 4], data[length - 3], data[length - 2], data[length - 1]);\n\n      return temp;\n    }\n  }]);\n\n  return Catenary;\n}();\n\nexports.default = Catenary;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/catenary-curve/lib/Catenary.js\n// module id = 9\n// module chunks = 0","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\n/* eslint-disable require-jsdoc, valid-jsdoc */\nvar MapShim = (function () {\n    if (typeof Map !== 'undefined') {\n        return Map;\n    }\n\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\n    function getIndex(arr, key) {\n        var result = -1;\n\n        arr.some(function (entry, index) {\n            if (entry[0] === key) {\n                result = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        return result;\n    }\n\n    return (function () {\n        function anonymous() {\n            this.__entries__ = [];\n        }\n\n        var prototypeAccessors = { size: { configurable: true } };\n\n        /**\r\n         * @returns {boolean}\r\n         */\n        prototypeAccessors.size.get = function () {\n            return this.__entries__.length;\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\n        anonymous.prototype.get = function (key) {\n            var index = getIndex(this.__entries__, key);\n            var entry = this.__entries__[index];\n\n            return entry && entry[1];\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.set = function (key, value) {\n            var index = getIndex(this.__entries__, key);\n\n            if (~index) {\n                this.__entries__[index][1] = value;\n            } else {\n                this.__entries__.push([key, value]);\n            }\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.delete = function (key) {\n            var entries = this.__entries__;\n            var index = getIndex(entries, key);\n\n            if (~index) {\n                entries.splice(index, 1);\n            }\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.has = function (key) {\n            return !!~getIndex(this.__entries__, key);\n        };\n\n        /**\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.clear = function () {\n            this.__entries__.splice(0);\n        };\n\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.forEach = function (callback, ctx) {\n            var this$1 = this;\n            if ( ctx === void 0 ) ctx = null;\n\n            for (var i = 0, list = this$1.__entries__; i < list.length; i += 1) {\n                var entry = list[i];\n\n                callback.call(ctx, entry[1], entry[0]);\n            }\n        };\n\n        Object.defineProperties( anonymous.prototype, prototypeAccessors );\n\n        return anonymous;\n    }());\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\nvar global$1 = (function () {\n    if (typeof global !== 'undefined' && global.Math === Math) {\n        return global;\n    }\n\n    if (typeof self !== 'undefined' && self.Math === Math) {\n        return self;\n    }\n\n    if (typeof window !== 'undefined' && window.Math === Math) {\n        return window;\n    }\n\n    // eslint-disable-next-line no-new-func\n    return Function('return this')();\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\nvar requestAnimationFrame$1 = (function () {\n    if (typeof requestAnimationFrame === 'function') {\n        // It's required to use a bounded function because IE sometimes throws\n        // an \"Invalid calling object\" error if rAF is invoked without the global\n        // object on the left hand side.\n        return requestAnimationFrame.bind(global$1);\n    }\n\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\n})();\n\n// Defines minimum timeout before adding a trailing call.\nvar trailingTimeout = 2;\n\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\nvar throttle = function (callback, delay) {\n    var leadingCall = false,\n        trailingCall = false,\n        lastCallTime = 0;\n\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\n    function resolvePending() {\n        if (leadingCall) {\n            leadingCall = false;\n\n            callback();\n        }\n\n        if (trailingCall) {\n            proxy();\n        }\n    }\n\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\n    function timeoutCallback() {\n        requestAnimationFrame$1(resolvePending);\n    }\n\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\n    function proxy() {\n        var timeStamp = Date.now();\n\n        if (leadingCall) {\n            // Reject immediately following calls.\n            if (timeStamp - lastCallTime < trailingTimeout) {\n                return;\n            }\n\n            // Schedule new call to be in invoked when the pending one is resolved.\n            // This is important for \"transitions\" which never actually start\n            // immediately so there is a chance that we might miss one if change\n            // happens amids the pending invocation.\n            trailingCall = true;\n        } else {\n            leadingCall = true;\n            trailingCall = false;\n\n            setTimeout(timeoutCallback, delay);\n        }\n\n        lastCallTime = timeStamp;\n    }\n\n    return proxy;\n};\n\n// Minimum delay before invoking the update of observers.\nvar REFRESH_DELAY = 20;\n\n// A list of substrings of CSS properties used to find transition events that\n// might affect dimensions of observed elements.\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\n\n// Check if MutationObserver is available.\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\n\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\nvar ResizeObserverController = function() {\n    this.connected_ = false;\n    this.mutationEventsAdded_ = false;\n    this.mutationsObserver_ = null;\n    this.observers_ = [];\n\n    this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\n    this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\n};\n\n/**\r\n * Adds observer to observers list.\r\n *\r\n * @param {ResizeObserverSPI} observer - Observer to be added.\r\n * @returns {void}\r\n */\n\n\n/**\r\n * Holds reference to the controller's instance.\r\n *\r\n * @private {ResizeObserverController}\r\n */\n\n\n/**\r\n * Keeps reference to the instance of MutationObserver.\r\n *\r\n * @private {MutationObserver}\r\n */\n\n/**\r\n * Indicates whether DOM listeners have been added.\r\n *\r\n * @private {boolean}\r\n */\nResizeObserverController.prototype.addObserver = function (observer) {\n    if (!~this.observers_.indexOf(observer)) {\n        this.observers_.push(observer);\n    }\n\n    // Add listeners if they haven't been added yet.\n    if (!this.connected_) {\n        this.connect_();\n    }\n};\n\n/**\r\n * Removes observer from observers list.\r\n *\r\n * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.removeObserver = function (observer) {\n    var observers = this.observers_;\n    var index = observers.indexOf(observer);\n\n    // Remove observer if it's present in registry.\n    if (~index) {\n        observers.splice(index, 1);\n    }\n\n    // Remove listeners if controller has no connected observers.\n    if (!observers.length && this.connected_) {\n        this.disconnect_();\n    }\n};\n\n/**\r\n * Invokes the update of observers. It will continue running updates insofar\r\n * it detects changes.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.refresh = function () {\n    var changesDetected = this.updateObservers_();\n\n    // Continue running updates if changes have been detected as there might\n    // be future ones caused by CSS transitions.\n    if (changesDetected) {\n        this.refresh();\n    }\n};\n\n/**\r\n * Updates every observer from observers list and notifies them of queued\r\n * entries.\r\n *\r\n * @private\r\n * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n *  dimensions of it's elements.\r\n */\nResizeObserverController.prototype.updateObservers_ = function () {\n    // Collect observers that have active observations.\n    var activeObservers = this.observers_.filter(function (observer) {\n        return observer.gatherActive(), observer.hasActive();\n    });\n\n    // Deliver notifications in a separate cycle in order to avoid any\n    // collisions between observers, e.g. when multiple instances of\n    // ResizeObserver are tracking the same element and the callback of one\n    // of them changes content dimensions of the observed target. Sometimes\n    // this may result in notifications being blocked for the rest of observers.\n    activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\n\n    return activeObservers.length > 0;\n};\n\n/**\r\n * Initializes DOM listeners.\r\n *\r\n * @private\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.connect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already added.\n    if (!isBrowser || this.connected_) {\n        return;\n    }\n\n    // Subscription to the \"Transitionend\" event is used as a workaround for\n    // delayed transitions. This way it's possible to capture at least the\n    // final state of an element.\n    document.addEventListener('transitionend', this.onTransitionEnd_);\n\n    window.addEventListener('resize', this.refresh);\n\n    if (mutationObserverSupported) {\n        this.mutationsObserver_ = new MutationObserver(this.refresh);\n\n        this.mutationsObserver_.observe(document, {\n            attributes: true,\n            childList: true,\n            characterData: true,\n            subtree: true\n        });\n    } else {\n        document.addEventListener('DOMSubtreeModified', this.refresh);\n\n        this.mutationEventsAdded_ = true;\n    }\n\n    this.connected_ = true;\n};\n\n/**\r\n * Removes DOM listeners.\r\n *\r\n * @private\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.disconnect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already removed.\n    if (!isBrowser || !this.connected_) {\n        return;\n    }\n\n    document.removeEventListener('transitionend', this.onTransitionEnd_);\n    window.removeEventListener('resize', this.refresh);\n\n    if (this.mutationsObserver_) {\n        this.mutationsObserver_.disconnect();\n    }\n\n    if (this.mutationEventsAdded_) {\n        document.removeEventListener('DOMSubtreeModified', this.refresh);\n    }\n\n    this.mutationsObserver_ = null;\n    this.mutationEventsAdded_ = false;\n    this.connected_ = false;\n};\n\n/**\r\n * \"Transitionend\" event handler.\r\n *\r\n * @private\r\n * @param {TransitionEvent} event\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.onTransitionEnd_ = function (ref) {\n        var propertyName = ref.propertyName; if ( propertyName === void 0 ) propertyName = '';\n\n    // Detect whether transition may affect dimensions of an element.\n    var isReflowProperty = transitionKeys.some(function (key) {\n        return !!~propertyName.indexOf(key);\n    });\n\n    if (isReflowProperty) {\n        this.refresh();\n    }\n};\n\n/**\r\n * Returns instance of the ResizeObserverController.\r\n *\r\n * @returns {ResizeObserverController}\r\n */\nResizeObserverController.getInstance = function () {\n    if (!this.instance_) {\n        this.instance_ = new ResizeObserverController();\n    }\n\n    return this.instance_;\n};\n\nResizeObserverController.instance_ = null;\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\nvar defineConfigurable = (function (target, props) {\n    for (var i = 0, list = Object.keys(props); i < list.length; i += 1) {\n        var key = list[i];\n\n        Object.defineProperty(target, key, {\n            value: props[key],\n            enumerable: false,\n            writable: false,\n            configurable: true\n        });\n    }\n\n    return target;\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\nvar getWindowOf = (function (target) {\n    // Assume that the element is an instance of Node, which means that it\n    // has the \"ownerDocument\" property from which we can retrieve a\n    // corresponding global object.\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\n\n    // Return the local global object if it's not possible extract one from\n    // provided element.\n    return ownerGlobal || global$1;\n});\n\n// Placeholder of an empty content rectangle.\nvar emptyRect = createRectInit(0, 0, 0, 0);\n\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\nfunction toFloat(value) {\n    return parseFloat(value) || 0;\n}\n\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\nfunction getBordersSize(styles) {\n    var positions = [], len = arguments.length - 1;\n    while ( len-- > 0 ) positions[ len ] = arguments[ len + 1 ];\n\n    return positions.reduce(function (size, position) {\n        var value = styles['border-' + position + '-width'];\n\n        return size + toFloat(value);\n    }, 0);\n}\n\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\nfunction getPaddings(styles) {\n    var positions = ['top', 'right', 'bottom', 'left'];\n    var paddings = {};\n\n    for (var i = 0, list = positions; i < list.length; i += 1) {\n        var position = list[i];\n\n        var value = styles['padding-' + position];\n\n        paddings[position] = toFloat(value);\n    }\n\n    return paddings;\n}\n\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\nfunction getSVGContentRect(target) {\n    var bbox = target.getBBox();\n\n    return createRectInit(0, 0, bbox.width, bbox.height);\n}\n\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\nfunction getHTMLElementContentRect(target) {\n    // Client width & height properties can't be\n    // used exclusively as they provide rounded values.\n    var clientWidth = target.clientWidth;\n    var clientHeight = target.clientHeight;\n\n    // By this condition we can catch all non-replaced inline, hidden and\n    // detached elements. Though elements with width & height properties less\n    // than 0.5 will be discarded as well.\n    //\n    // Without it we would need to implement separate methods for each of\n    // those cases and it's not possible to perform a precise and performance\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\n    // gives wrong results for elements with width & height less than 0.5.\n    if (!clientWidth && !clientHeight) {\n        return emptyRect;\n    }\n\n    var styles = getWindowOf(target).getComputedStyle(target);\n    var paddings = getPaddings(styles);\n    var horizPad = paddings.left + paddings.right;\n    var vertPad = paddings.top + paddings.bottom;\n\n    // Computed styles of width & height are being used because they are the\n    // only dimensions available to JS that contain non-rounded values. It could\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\n    var width = toFloat(styles.width),\n        height = toFloat(styles.height);\n\n    // Width & height include paddings and borders when the 'border-box' box\n    // model is applied (except for IE).\n    if (styles.boxSizing === 'border-box') {\n        // Following conditions are required to handle Internet Explorer which\n        // doesn't include paddings and borders to computed CSS dimensions.\n        //\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\n        // properties then it's either IE, and thus we don't need to subtract\n        // anything, or an element merely doesn't have paddings/borders styles.\n        if (Math.round(width + horizPad) !== clientWidth) {\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\n        }\n\n        if (Math.round(height + vertPad) !== clientHeight) {\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\n        }\n    }\n\n    // Following steps can't be applied to the document's root element as its\n    // client[Width/Height] properties represent viewport area of the window.\n    // Besides, it's as well not necessary as the <html> itself neither has\n    // rendered scroll bars nor it can be clipped.\n    if (!isDocumentElement(target)) {\n        // In some browsers (only in Firefox, actually) CSS width & height\n        // include scroll bars size which can be removed at this step as scroll\n        // bars are the only difference between rounded dimensions + paddings\n        // and \"client\" properties, though that is not always true in Chrome.\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\n\n        // Chrome has a rather weird rounding of \"client\" properties.\n        // E.g. for an element with content width of 314.2px it sometimes gives\n        // the client width of 315px and for the width of 314.7px it may give\n        // 314px. And it doesn't happen all the time. So just ignore this delta\n        // as a non-relevant.\n        if (Math.abs(vertScrollbar) !== 1) {\n            width -= vertScrollbar;\n        }\n\n        if (Math.abs(horizScrollbar) !== 1) {\n            height -= horizScrollbar;\n        }\n    }\n\n    return createRectInit(paddings.left, paddings.top, width, height);\n}\n\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\nvar isSVGGraphicsElement = (function () {\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\n    // interface.\n    if (typeof SVGGraphicsElement !== 'undefined') {\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\n    }\n\n    // If it's so, then check that element is at least an instance of the\n    // SVGElement and that it has the \"getBBox\" method.\n    // eslint-disable-next-line no-extra-parens\n    return function (target) { return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === 'function'; };\n})();\n\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\nfunction isDocumentElement(target) {\n    return target === getWindowOf(target).document.documentElement;\n}\n\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\nfunction getContentRect(target) {\n    if (!isBrowser) {\n        return emptyRect;\n    }\n\n    if (isSVGGraphicsElement(target)) {\n        return getSVGContentRect(target);\n    }\n\n    return getHTMLElementContentRect(target);\n}\n\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\nfunction createReadOnlyRect(ref) {\n    var x = ref.x;\n    var y = ref.y;\n    var width = ref.width;\n    var height = ref.height;\n\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\n    var rect = Object.create(Constr.prototype);\n\n    // Rectangle's properties are not writable and non-enumerable.\n    defineConfigurable(rect, {\n        x: x, y: y, width: width, height: height,\n        top: y,\n        right: x + width,\n        bottom: height + y,\n        left: x\n    });\n\n    return rect;\n}\n\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\nfunction createRectInit(x, y, width, height) {\n    return { x: x, y: y, width: width, height: height };\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\nvar ResizeObservation = function(target) {\n    this.broadcastWidth = 0;\n    this.broadcastHeight = 0;\n    this.contentRect_ = createRectInit(0, 0, 0, 0);\n\n    this.target = target;\n};\n\n/**\r\n * Updates content rectangle and tells whether it's width or height properties\r\n * have changed since the last broadcast.\r\n *\r\n * @returns {boolean}\r\n */\n\n\n/**\r\n * Reference to the last observed content rectangle.\r\n *\r\n * @private {DOMRectInit}\r\n */\n\n\n/**\r\n * Broadcasted width of content rectangle.\r\n *\r\n * @type {number}\r\n */\nResizeObservation.prototype.isActive = function () {\n    var rect = getContentRect(this.target);\n\n    this.contentRect_ = rect;\n\n    return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;\n};\n\n/**\r\n * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n * from the corresponding properties of the last observed content rectangle.\r\n *\r\n * @returns {DOMRectInit} Last observed content rectangle.\r\n */\nResizeObservation.prototype.broadcastRect = function () {\n    var rect = this.contentRect_;\n\n    this.broadcastWidth = rect.width;\n    this.broadcastHeight = rect.height;\n\n    return rect;\n};\n\nvar ResizeObserverEntry = function(target, rectInit) {\n    var contentRect = createReadOnlyRect(rectInit);\n\n    // According to the specification following properties are not writable\n    // and are also not enumerable in the native implementation.\n    //\n    // Property accessors are not being used as they'd require to define a\n    // private WeakMap storage which may cause memory leaks in browsers that\n    // don't support this type of collections.\n    defineConfigurable(this, { target: target, contentRect: contentRect });\n};\n\nvar ResizeObserverSPI = function(callback, controller, callbackCtx) {\n    this.activeObservations_ = [];\n    this.observations_ = new MapShim();\n\n    if (typeof callback !== 'function') {\n        throw new TypeError('The callback provided as parameter 1 is not a function.');\n    }\n\n    this.callback_ = callback;\n    this.controller_ = controller;\n    this.callbackCtx_ = callbackCtx;\n};\n\n/**\r\n * Starts observing provided element.\r\n *\r\n * @param {Element} target - Element to be observed.\r\n * @returns {void}\r\n */\n\n\n/**\r\n * Registry of the ResizeObservation instances.\r\n *\r\n * @private {Map<Element, ResizeObservation>}\r\n */\n\n\n/**\r\n * Public ResizeObserver instance which will be passed to the callback\r\n * function and used as a value of it's \"this\" binding.\r\n *\r\n * @private {ResizeObserver}\r\n */\n\n/**\r\n * Collection of resize observations that have detected changes in dimensions\r\n * of elements.\r\n *\r\n * @private {Array<ResizeObservation>}\r\n */\nResizeObserverSPI.prototype.observe = function (target) {\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    // Do nothing if current environment doesn't have the Element interface.\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n        return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n        throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_;\n\n    // Do nothing if element is already being observed.\n    if (observations.has(target)) {\n        return;\n    }\n\n    observations.set(target, new ResizeObservation(target));\n\n    this.controller_.addObserver(this);\n\n    // Force the update of observations.\n    this.controller_.refresh();\n};\n\n/**\r\n * Stops observing provided element.\r\n *\r\n * @param {Element} target - Element to stop observing.\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.unobserve = function (target) {\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    // Do nothing if current environment doesn't have the Element interface.\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n        return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n        throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_;\n\n    // Do nothing if element is not being observed.\n    if (!observations.has(target)) {\n        return;\n    }\n\n    observations.delete(target);\n\n    if (!observations.size) {\n        this.controller_.removeObserver(this);\n    }\n};\n\n/**\r\n * Stops observing all elements.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.disconnect = function () {\n    this.clearActive();\n    this.observations_.clear();\n    this.controller_.removeObserver(this);\n};\n\n/**\r\n * Collects observation instances the associated element of which has changed\r\n * it's content rectangle.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.gatherActive = function () {\n        var this$1 = this;\n\n    this.clearActive();\n\n    this.observations_.forEach(function (observation) {\n        if (observation.isActive()) {\n            this$1.activeObservations_.push(observation);\n        }\n    });\n};\n\n/**\r\n * Invokes initial callback function with a list of ResizeObserverEntry\r\n * instances collected from active resize observations.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.broadcastActive = function () {\n    // Do nothing if observer doesn't have active observations.\n    if (!this.hasActive()) {\n        return;\n    }\n\n    var ctx = this.callbackCtx_;\n\n    // Create ResizeObserverEntry instance for every active observation.\n    var entries = this.activeObservations_.map(function (observation) {\n        return new ResizeObserverEntry(observation.target, observation.broadcastRect());\n    });\n\n    this.callback_.call(ctx, entries, ctx);\n    this.clearActive();\n};\n\n/**\r\n * Clears the collection of active observations.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.clearActive = function () {\n    this.activeObservations_.splice(0);\n};\n\n/**\r\n * Tells whether observer has active observations.\r\n *\r\n * @returns {boolean}\r\n */\nResizeObserverSPI.prototype.hasActive = function () {\n    return this.activeObservations_.length > 0;\n};\n\n// Registry of internal observers. If WeakMap is not available use current shim\n// for the Map collection as it has all required methods and because WeakMap\n// can't be fully polyfilled anyway.\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\n\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\nvar ResizeObserver = function(callback) {\n    if (!(this instanceof ResizeObserver)) {\n        throw new TypeError('Cannot call a class as a function.');\n    }\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    var controller = ResizeObserverController.getInstance();\n    var observer = new ResizeObserverSPI(callback, controller, this);\n\n    observers.set(this, observer);\n};\n\n// Expose public methods of ResizeObserver.\n['observe', 'unobserve', 'disconnect'].forEach(function (method) {\n    ResizeObserver.prototype[method] = function () {\n        return (ref = observers.get(this))[method].apply(ref, arguments);\n        var ref;\n    };\n});\n\nvar index = (function () {\n    // Export existing implementation if available.\n    if (typeof global$1.ResizeObserver !== 'undefined') {\n        return global$1.ResizeObserver;\n    }\n\n    return ResizeObserver;\n})();\n\nexport default index;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js\n// module id = 10\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 11\n// module chunks = 0","/** \r\n * Original from: https://stackoverflow.com/questions/21961839/simulation-background-size-cover-in-canvas\r\n * Original By Ken Fyrstenberg Nilsen\r\n * \r\n * Note: img must be fully loaded or have correct width & height set.\r\n */\r\nexport default function drawImageProp({ctx, img, x, y, w, h, offsetX, offsetY} = {}) {\r\n  // Defaults\r\n  if (typeof x !== \"number\") x = 0;\r\n  if (typeof y !== \"number\") y = 0;\r\n  if (typeof w !== \"number\") w = ctx.canvas.width;\r\n  if (typeof h !== \"number\") h = ctx.canvas.height;\r\n  if (typeof offsetX !== \"number\") offsetX = 0.5;\r\n  if (typeof offsetY !== \"number\") offsetY = 0.5;\r\n\r\n  // keep bounds [0.0, 1.0]\r\n  if (offsetX < 0) offsetX = 0;\r\n  if (offsetY < 0) offsetY = 0;\r\n  if (offsetX > 1) offsetX = 1;\r\n  if (offsetY > 1) offsetY = 1;\r\n\r\n  var iw = img.width,\r\n    ih = img.height,\r\n    r = Math.min(w / iw, h / ih),\r\n    nw = iw * r, // new prop. width\r\n    nh = ih * r, // new prop. height\r\n    cx,\r\n    cy,\r\n    cw,\r\n    ch,\r\n    ar = 1;\r\n\r\n  // decide which gap to fill\r\n  if (nw < w) ar = w / nw;\r\n  if (Math.abs(ar - 1) < 1e-14 && nh < h) ar = h / nh; // updated\r\n  nw *= ar;\r\n  nh *= ar;\r\n\r\n  // calc source rectangle\r\n  cw = iw / (nw / w);\r\n  ch = ih / (nh / h);\r\n\r\n  cx = (iw - cw) * offsetX;\r\n  cy = (ih - ch) * offsetY;\r\n\r\n  // make sure source rectangle is valid\r\n  if (cx < 0) cx = 0;\r\n  if (cy < 0) cy = 0;\r\n  if (cw > iw) cw = iw;\r\n  if (ch > ih) ch = ih;\r\n\r\n  // fill image in dest. rectangle\r\n  ctx.drawImage(img, cx, cy, cw, ch, x, y, w, h);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/drawImage.js"],"sourceRoot":""}